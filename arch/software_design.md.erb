---
title: Four Rules of Simple Design
---

## What is software design?

* In software, "arranging code in a particular way"
  * Context matters: Are you writing throwaway code or software that someone will rely on?
  * What is "good design"? It's an aesthetic judgement, in a way
* What does it have to do with Scalability?
  * Applied to software engineering and methodology
  * Large codebase
  * Longer lived
  * Diversity of skills and individuals
* Is good design free?
  * YAGNI and BDUF
  * It requires more skillful developers
  * It requires investment and ongoing maintenance
  * Better than free, it will pay off!
* Even for tiny programs?
  * Usually its as easy to write a well designed program vs a poorly designed one
  * Finding the balance: effort and care proportional to cost over time!
