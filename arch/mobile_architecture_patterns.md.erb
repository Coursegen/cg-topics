---
title: Mobile Architectures
---
:slide_title Mobile Architecture Patterrns
* Depending on need, mobile products can be structured quite differently. 
* It's important to understand the trade-offs

<hr/>

<%= image "mobile-1.jpeg", extra: "style=\"max-width: 15%;\" class=\"float-left mr-5\"" %>
### Untethered Rich Web GUI
* **Example:** GoodNotes or Apple Camera App
* Server: never or rarely requires one
* UI paradigm: must be a Local App
* Difficulty: Can be the easiest, depends on the functionality

<br/><br/><br/><br/><br/><br/><br/>
<hr/>

<%= image "mobile-2.jpeg", extra: "style=\"max-width: 15%;\" class=\"float-left mr-5\"" %>
### Rich Web GUI + hidden server
* **Example:** Apple Weather App
* Server: requires your own server, with intermittent or constant connection
* UI paradigm: local App. The primary (and sometimes only) access to functionality is over an app. There is no user interface for the 'server' or 'service'
* Difficulty: Significant challenge to provide all the functionality over limited device.

<br/><br/><br/><br/><br/><br/>
<hr/>

<%= image "mobile-3.jpeg", extra: "style=\"max-width: 15%;\" class=\"float-left mr-5\"" %>
### Responsive Web GUI
* **Example:** City of Boston Transparency Project
* Server: requires a dedicated server, and connected all the time
* UI paradigm: web based UI, by definition
* Difficulty: You save a lot of trouble by not having to develop local app. Much less mobile platform dependence

<br/><br/><br/><br/><br/><br/>
<hr/>

<%= image "mobile-4.jpeg", extra: "style=\"max-width: 15%;\" class=\"float-left mr-5\"" %>
### Rich Web GUI + complete web based app
* **Example:** Facebook app on iPhone and Android
* Server: your own server, providing it's own user experience, plus a connection to the mobile app
* UI paradigm: Looks like a native app, often is a hybrid
* Difficulty: One of the most difficult. You need to design two separate and complete user experiences

<br/><br/><br/><br/><br/><br/>
<hr/>

<%= callout("N.B.", " The acceptable and popular approaches are constantly evolving based on user expectation and available tools and platforms") %>
