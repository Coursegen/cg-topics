---
title: Joints and Links
desc: "How the robot is able to manipulate the world around it"
---
## Manipulation

* Robot Manipulators come in many shapes and sizes
* Well known robot manipulators from videos of car factories
* They are often "blind"

<slide_break></slide_break>

### Definitions

* A collection of joints held together by links

<%= include_image "/content/topics/images/joint.png" %>

<slide_break></slide_break>

### Joints

* Are not "visible" - all they do is to show how two links move relative to each other

<%= source_begin("language-xml") %>&lt;joint name="my_joint" type="floating"&gt;
    &lt;origin xyz="0 0 1" rpy="0 0 3.1416"/&gt;
    &lt;parent link="link1"/&gt;
    &lt;child link="link2"/&gt;

    &lt;calibration rising="0.0"/&gt;
    &lt;dynamics damping="0.0" friction="0.0"/&gt;
    &lt;limit effort="30" velocity="1.0" lower="-2.2" upper="0.7" /&gt;
    &lt;safety_controller k_velocity="10" k_position="15" soft_lower_limit="-2.0" soft_upper_limit="0.5" /&gt;
 &lt;/joint&gt;
 <%= source_end %>


* See [urdf documentation](http://wiki.ros.org/urdf/XML/joint) for all the details

<slide_break></slide_break>

### Joint Types

1. revolute - a hinge joint that rotates along the axis and has a limited range specified by the upper and lower limits.
1. continuous - a continuous hinge joint that rotates around the axis and has no upper and lower limits.
1. prismatic - a sliding joint that slides along the axis, and has a limited range specified by the upper and lower limits.
1. fixed - This is not really a joint because it cannot move. All degrees of freedom are locked. This type of joint does not require the axis, calibration, dynamics, limits or safety_controller.
1. floating - This joint allows motion for all 6 degrees of freedom.
1. planar - This joint allows motion in a plane perpendicular to the axis.

<slide_break></slide_break>

## Links

* Are "visible"
* Can have many other properties

<%= source_begin "language-xml"%>&lt;link name="my_link"&gt;
   &lt;inertial&gt;
     &lt;origin xyz="0 0 0.5" rpy="0 0 0"/&gt;
     &lt;mass value="1"/&gt;
     &lt;inertia ixx="100"  ixy="0"  ixz="0" iyy="100" iyz="0" izz="100" /&gt;
   &lt;/inertial&gt;

   &lt;visual&gt;
     &lt;origin xyz="0 0 0" rpy="0 0 0" /&gt;
     &lt;geometry&gt;
       &lt;box size="1 1 1" /&gt;
     &lt;/geometry&gt;
     &lt;material name="Cyan"&gt;
       &lt;color rgba="0 1.0 1.0 1.0"/&gt;
     &lt;/material&gt;
   &lt;/visual&gt;

   &lt;collision&gt;
     &lt;origin xyz="0 0 0" rpy="0 0 0"/&gt;
     &lt;geometry&gt;
       &lt;cylinder radius="1" length="0.5"/&gt;
     &lt;/geometry&gt;
   &lt;/collision&gt;
 &lt;/link&gt;<%= source_end %>

<slide_break></slide_break>

### Kinematic Chains

* A set of links and joints together form a *kinematic chain*
* If one end is attached to something fixed (like the floor) it is "grounded"
* The other end will usually have some kind of gripper, sensor, or effector
* This system can be complex and can be analyzed mathematically

<slide_break></slide_break>

### Coordinate Frames

* Ground based mobile robots have two important coordinate frames: the map and robot frames.
* Robot arms have many more coordinate systems.
* The links are fixed and of known length
* The joints are all in a known position represented by one or more angles
* Joint space and task space
* In ROS, names in URDF are used to name the frames 

<slide_break></slide_break>

### From .launch file

<%= source_begin "language-xml"%>&lt;!-- Send joint values --&gt;
&lt;node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher"&gt;
&lt;/node&gt;

&lt;!-- Combine joint values to TF--&gt;
&lt;node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/&gt;
<%= source_end %>

<slide_break></slide_break>

### Forward Kinematics

* If you set all the joint angles a certain way, where will the end be in space?
* This has a single solution and is tractable

<slide_break></slide_break>

### Reverse Kinematics

* If you want the end to be in a certain location, what should the joint angles be?
* This might have zero (out of reach), or more solutions







